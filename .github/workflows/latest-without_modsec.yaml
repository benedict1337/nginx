name: NGINX-QuicTLS without ModSecurity

on:
  push:
    branches:
      - latest
    paths:
      - Dockerfile.without-modsec
env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-quictls
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build-without-modsec:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta-without-modsec
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=schedule,pattern=latest,suffix=-without_modsec,enable=true,priority=1000
            type=ref,event=branch,enable=true,suffix=-without_modsec,priority=600
            type=ref,event=tag,enable=true,suffix=-without_modsec,priority=600
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO_TOKEN }}
      - name: Build and push by digest (Docker Hub)
        id: build-without-modsec
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.without-modsec
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta-without-modsec.outputs.labels }}
          outputs: type=image,name=${{ env.DOCKER_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nginx-quictls:latest-without_modsec
          cache-to: type=inline
          build-args: |
            "BUILD=${{ github.sha }}-${{ steps.meta-without-modsec.outputs.version }}"
      - name: Build and push by digest (GitHub Container Registry)
        id: build-without-modsec-ghcr
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.without-modsec
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta-without-modsec.outputs.labels }}
          outputs: type=image,name=${{ env.GHCR_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest-without_modsec
          cache-to: type=inline
          build-args: |
            "BUILD=${{ github.sha }}-${{ steps.meta-without-modsec.outputs.version }}"
      - name: Export digest
        run: |
          mkdir -p /tmp/digests_without-modsec
          digest="${{ steps.build-without-modsec.outputs.digest }}"
          touch "/tmp/digests_without-modsec/${digest#sha256:}"         
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests_without-modsec
          path: /tmp/digests_without-modsec/*
          if-no-files-found: error
          retention-days: 1

  merge-without-modsec:
    runs-on: ubuntu-latest
    needs:
      - build-without-modsec
    steps:
      - name: Download digests (Docker Hub)
        uses: actions/download-artifact@v3
        with:
          name: digests_without-modsec
          path: /tmp/digests-without-modsec
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta-without-modsec
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=schedule,pattern=latest,suffix=-without_modsec,enable=true,priority=1000
            type=ref,event=branch,enable=true,suffix=-without_modsec,priority=600
            type=ref,event=tag,enable=true,suffix=-without_modsec,priority=600
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO_TOKEN }}
      - name: Create manifest list and push (Docker Hub)
        working-directory: /tmp/digests-without-modsec
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKER_IMAGE }}@sha256:%s ' *)  
      - name: Create manifest list and push (GitHub Container Registry)
        working-directory: /tmp/digests-without-modsec
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_IMAGE }}@sha256:%s ' *)  
      - name: Inspect images
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_IMAGE }}:${{ steps.meta-without-modsec.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_IMAGE }}:${{ steps.meta-without-modsec.outputs.version }}