name: NGINX-BoringSSL (all builds)

on:
  push:
    branches:
      - boringssl-test
    paths:
      - Dockerfile
      - Dockerfile.without-modsec
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/nginx-boringssl
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-file:
          - { file: Dockerfile, suffix: "" }
          - { file: Dockerfile.without-modsec, suffix: "-without_modsec" }
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest
          use: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=ref,event=branch,suffix=${{ matrix.build-file.suffix }}
            type=ref,event=tag,suffix=${{ matrix.build-file.suffix }}
          flavor: |
            latest=false

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (with cache)
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.build-file.file }}
          platforms: ${{ join(matrix.platform, ',') }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD=${{ github.sha }}-${{ steps.meta.outputs.version }}
          cache-from: |
            type=registry,ref=${{ env.GHCR_IMAGE }}:cache${{ matrix.build-file.suffix }}
            type=registry,ref=${{ env.DOCKER_IMAGE }}:cache${{ matrix.build-file.suffix }}
          cache-to: |
            type=registry,ref=${{ env.GHCR_IMAGE }}:cache${{ matrix.build-file.suffix }},mode=max
            type=registry,ref=${{ env.DOCKER_IMAGE }}:cache${{ matrix.build-file.suffix }},mode=max

      - name: Export digest
        run: |
          echo "DOCKER_DIGEST=${{ env.DOCKER_IMAGE }}@${{ steps.build.outputs.digest }}" >> $GITHUB_ENV
          echo "GHCR_DIGEST=${{ env.GHCR_IMAGE }}@${{ steps.build.outputs.digest }}" >> $GITHUB_ENV

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          signoff: true
          delete-branch: true
          commit-message: Update BoringSSL build (with cache + digests)
          title: "Update BoringSSL build"
          body: |
            ### ðŸ”„ Automated build update

            âœ… Build completed successfully with cache optimization.

            **Digests:**
            - DockerHub â†’ `${{ env.DOCKER_DIGEST }}`
            - GHCR â†’ `${{ env.GHCR_DIGEST }}`

            _Triggered by: `${{ github.event_name }}`_
          branch: update-boringssl-build-${{ github.sha }}
          base: boringssl-test
          labels: dependencies, docker, automated

